sudo: required
dist: trusty
language: rust

matrix:
  include:
    # parallel builds for tests
    - rust: stable
      env: NAME=trust-dns-proto
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_proto.sh

    - rust: stable
      env: NAME=trust-dns-client
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_client.sh

    - rust: stable
      env: NAME=trust-dns-resolver
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_resolver.sh

    - rust: stable
      env: NAME=trust-dns-server
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_server.sh

    - rust: stable
      env: NAME=trust-dns-integration-tests
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_integration_tests.sh

    # min rust version
    # - rust: 1.14.0
    - rust: beta
      env: NAME=beta
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_proto.sh
        - scripts/run_tests_resolver.sh

    # macos
    - os: osx
      rust: stable
      env: NAME=macOS
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_proto.sh
        - scripts/run_tests_resolver.sh

    # nightly
    - rust: nightly
      env: NAME=nightly
           RUST_BACKTRACE=full
      script: 
        - scripts/run_tests_proto.sh
        - scripts/run_tests_resolver.sh        

    # clippy
    - rust: nightly
      env: NAME=clippy
           RUST_BACKTRACE=full
      before_install:
        - cargo install clippy --force
      script:
        - scripts/run_clippy.sh

    - rust: nightly
      env: NAME=rustfmt
           RUST_BACKTRACE=full
      before_install:
        - cargo install rustfmt-nightly --force
      script:
        - cargo fmt --all -- --write-mode=diff

    # compatiblity tests
    - rust: stable
      env: NAME=compatiblity
           TDNS_BIND_PATH="../../bind-9.11.0-P1/bin/named/named"
           RUST_BACKTRACE=full
      before_install:
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then scripts/install_openssl_deb.sh; fi
        - scripts/install_bind.sh
      script:
        - cargo test --manifest-path compatibility-tests/Cargo.toml --no-default-features --features=bind

    ###
    # coverage reports
    - rust: stable
      env: NAME=kcov-all-features
           RUST_BACKTRACE=full
           RUN_KCOV=1
      script:
        - scripts/build_tests_all_features.sh
        - scripts/run_kcov.sh

    - rust: stable
      env: NAME=kcov-dns-over-native-tls
           RUST_BACKTRACE=full
           RUN_KCOV=1
      script:
        - scripts/build_tests_dns_over_native_tls.sh
        - scripts/run_kcov.sh

    - rust: stable
      env: NAME=kcov-dns-over-openssl
           RUST_BACKTRACE=full
           RUN_KCOV=1
      script:
        - scripts/build_tests_dns_over_openssl.sh
        - scripts/run_kcov.sh

    - rust: stable
      env: NAME=kcov-dns-over-rustls
           RUST_BACKTRACE=full
           RUN_KCOV=1
      script:
        - scripts/build_tests_dns_over_rustls.sh
        - scripts/run_kcov.sh

    - rust: stable
      env: NAME=kcov-dnssec-openssl
           RUST_BACKTRACE=full
           RUN_KCOV=1
      script:
        - scripts/build_tests_dnssec_openssl.sh
        - scripts/run_kcov.sh

    - rust: stable
      env: NAME=kcov-dnssec-ring
           RUST_BACKTRACE=full
           RUN_KCOV=1
      script:
        - scripts/build_tests_dnssec_ring.sh
        - scripts/run_kcov.sh


  allow_failures:
    - rust: nightly

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then scripts/install_openssl_deb.sh; fi

## All scripts are run above...
script:
  - fail

#after_success: scripts/run_kcov.sh
