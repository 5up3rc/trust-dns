var searchIndex = {};
searchIndex['trust_dns'] = {"items":[[0,"","trust_dns","",null,null],[0,"rr","","",null,null],[0,"record_type","trust_dns::rr","",null,null],[4,"RecordType","trust_dns::rr::record_type","",null,null],[13,"A","","",0,null],[13,"AAAA","","",0,null],[13,"CNAME","","",0,null],[13,"MX","","",0,null],[13,"NS","","",0,null],[13,"NULL","","",0,null],[13,"PTR","","",0,null],[13,"SOA","","",0,null],[13,"TXT","","",0,null],[13,"AXFR","","",0,null],[13,"IXFR","","",0,null],[13,"OPT","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"recordtype"}],"output":{"name":"recordtype"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"recordtype"},{"name":"recordtype"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"recordtype"},{"name":"recordtype"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"recordtype"},{"name":"recordtype"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"recordtype"},{"name":"recordtype"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"recordtype"},{"name":"recordtype"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"recordtype"},{"name":"recordtype"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"recordtype"},{"name":"recordtype"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"recordtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Convert from RecordType to &str",0,{"inputs":[{"name":"recordtype"},{"name":"str"}],"output":{"name":"decoderesult"}}],[11,"from_u16","","Convert from RecordType to &str",0,{"inputs":[{"name":"recordtype"},{"name":"u16"}],"output":{"name":"decoderesult"}}],[11,"read","","",0,{"inputs":[{"name":"recordtype"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",0,{"inputs":[{"name":"recordtype"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[0,"dns_class","trust_dns::rr","",null,null],[4,"DNSClass","trust_dns::rr::dns_class","",null,null],[13,"IN","","",1,null],[13,"CH","","",1,null],[13,"HS","","",1,null],[13,"NONE","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"dnsclass"}],"output":{"name":"dnsclass"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"dnsclass"},{"name":"dnsclass"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"dnsclass"},{"name":"dnsclass"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"dnsclass"},{"name":"dnsclass"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"dnsclass"},{"name":"dnsclass"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"dnsclass"},{"name":"dnsclass"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"dnsclass"},{"name":"dnsclass"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"dnsclass"},{"name":"dnsclass"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"dnsclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Convert from &str to DNSClass",1,{"inputs":[{"name":"dnsclass"},{"name":"str"}],"output":{"name":"decoderesult"}}],[11,"from_u16","","Convert from u16 to DNSClass",1,{"inputs":[{"name":"dnsclass"},{"name":"u16"}],"output":{"name":"decoderesult"}}],[11,"read","","",1,{"inputs":[{"name":"dnsclass"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",1,{"inputs":[{"name":"dnsclass"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[0,"resource","trust_dns::rr","",null,null],[3,"Record","trust_dns::rr::resource","",null,null],[11,"clone","","",2,{"inputs":[{"name":"record"}],"output":{"name":"record"}}],[11,"fmt","","",2,{"inputs":[{"name":"record"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"record"},{"name":"record"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"record"},{"name":"record"}],"output":{"name":"bool"}}],[11,"new","","Creates a not very useful empty record, use the setters to build a more useful object\nThere are no optional elements in this object, defaults are an empty name, type A, class IN,\nttl of 0 and the 0.0.0.0 ip address.",2,{"inputs":[{"name":"record"}],"output":{"name":"record"}}],[11,"name","","",2,{"inputs":[{"name":"record"},{"name":"name"}],"output":{"name":"self"}}],[11,"add_name","","",2,{"inputs":[{"name":"record"},{"name":"string"}],"output":{"name":"self"}}],[11,"rr_type","","",2,{"inputs":[{"name":"record"},{"name":"recordtype"}],"output":{"name":"self"}}],[11,"dns_class","","",2,{"inputs":[{"name":"record"},{"name":"dnsclass"}],"output":{"name":"self"}}],[11,"ttl","","",2,{"inputs":[{"name":"record"},{"name":"i32"}],"output":{"name":"self"}}],[11,"rdata","","",2,{"inputs":[{"name":"record"},{"name":"rdata"}],"output":{"name":"self"}}],[11,"get_name","","",2,{"inputs":[{"name":"record"}],"output":{"name":"name"}}],[11,"get_rr_type","","",2,{"inputs":[{"name":"record"}],"output":{"name":"recordtype"}}],[11,"get_dns_class","","",2,{"inputs":[{"name":"record"}],"output":{"name":"dnsclass"}}],[11,"get_ttl","","",2,{"inputs":[{"name":"record"}],"output":{"name":"i32"}}],[11,"get_rdata","","",2,{"inputs":[{"name":"record"}],"output":{"name":"rdata"}}],[11,"read","","parse a resource record line example:\nWARNING: the record_bytes is 100% consumed and destroyed in this parsing process",2,{"inputs":[{"name":"record"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",2,{"inputs":[{"name":"record"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[0,"record_data","trust_dns::rr","",null,null],[4,"RData","trust_dns::rr::record_data","",null,null],[13,"CNAME","","",3,null],[12,"cname","trust_dns::rr::record_data::RData","",3,null],[13,"HINFO","trust_dns::rr::record_data","",3,null],[12,"cpu","trust_dns::rr::record_data::RData","",3,null],[12,"os","","",3,null],[13,"MX","trust_dns::rr::record_data","",3,null],[12,"preference","trust_dns::rr::record_data::RData","",3,null],[12,"exchange","","",3,null],[13,"NULL","trust_dns::rr::record_data","",3,null],[12,"anything","trust_dns::rr::record_data::RData","",3,null],[13,"NS","trust_dns::rr::record_data","",3,null],[12,"nsdname","trust_dns::rr::record_data::RData","",3,null],[13,"PTR","trust_dns::rr::record_data","",3,null],[12,"ptrdname","trust_dns::rr::record_data::RData","",3,null],[13,"SOA","trust_dns::rr::record_data","",3,null],[12,"mname","trust_dns::rr::record_data::RData","",3,null],[12,"rname","","",3,null],[12,"serial","","",3,null],[12,"refresh","","",3,null],[12,"retry","","",3,null],[12,"expire","","",3,null],[12,"minimum","","",3,null],[13,"TXT","trust_dns::rr::record_data","",3,null],[12,"txt_data","trust_dns::rr::record_data::RData","",3,null],[13,"A","trust_dns::rr::record_data","",3,null],[12,"address","trust_dns::rr::record_data::RData","",3,null],[13,"WKS","trust_dns::rr::record_data","",3,null],[12,"address","trust_dns::rr::record_data::RData","",3,null],[12,"protocol","","",3,null],[12,"bitmap","","",3,null],[13,"AAAA","trust_dns::rr::record_data","",3,null],[12,"address","trust_dns::rr::record_data::RData","",3,null],[11,"clone","trust_dns::rr::record_data","",3,{"inputs":[{"name":"rdata"}],"output":{"name":"rdata"}}],[11,"eq","","",3,{"inputs":[{"name":"rdata"},{"name":"rdata"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"rdata"},{"name":"rdata"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"rdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","",3,{"inputs":[{"name":"rdata"},{"name":"recordtype"},{"name":"vec"},{"name":"option"}],"output":{"name":"parseresult"}}],[11,"read","","",3,{"inputs":[{"name":"rdata"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",3,{"inputs":[{"name":"rdata"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[11,"from","trust_dns::rr::record_type","",0,{"inputs":[{"name":"recordtype"},{"name":"rdata"}],"output":{"name":"self"}}],[0,"domain","trust_dns::rr","",null,null],[3,"Name","trust_dns::rr::domain","TODO: all Names should be stored in a global \"intern\" space, and then everything that uses\nthem should be through references.",null,null],[11,"hash","","",4,null],[11,"clone","","",4,{"inputs":[{"name":"name"}],"output":{"name":"name"}}],[11,"eq","","",4,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",4,{"inputs":[{"name":"name"}],"output":{"name":"self"}}],[11,"label","","",4,{"inputs":[{"name":"name"},{"name":"str"}],"output":{"name":"self"}}],[11,"with_labels","","",4,{"inputs":[{"name":"name"},{"name":"vec"}],"output":{"name":"self"}}],[11,"add_label","","",4,{"inputs":[{"name":"name"},{"name":"string"}],"output":{"name":"self"}}],[11,"append","","",4,{"inputs":[{"name":"name"},{"name":"self"}],"output":{"name":"self"}}],[11,"base_name","","Trims off the first part of the name, to help with searching for the domain piece\nTODO: This makes a copy right now, probably can do something better...",4,{"inputs":[{"name":"name"}],"output":{"name":"option"}}],[11,"parse","","",4,{"inputs":[{"name":"name"},{"name":"str"},{"name":"option"}],"output":{"name":"parseresult"}}],[11,"read","","parses the chain of labels\n this has a max of 255 octets, with each label being less than 63.\n all names will be stored lowercase internally.\nThis will consume the portions of the Vec which it is reading...",4,{"inputs":[{"name":"name"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",4,{"inputs":[{"name":"name"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[11,"index","","",4,{"inputs":[{"name":"name"},{"name":"usize"}],"output":{"name":"string"}}],[0,"authority","trust_dns","The catalog module has the types necessary for storing and caching authoritative records.",null,null],[3,"Authority","trust_dns::authority","Authority is the storage method for all",null,null],[3,"Catalog","","",null,null],[11,"new","","",5,{"inputs":[{"name":"authority"},{"name":"name"},{"name":"hashmap"}],"output":{"name":"authority"}}],[11,"get_origin","","",5,{"inputs":[{"name":"authority"}],"output":{"name":"name"}}],[11,"get_soa","","",5,{"inputs":[{"name":"authority"}],"output":{"name":"option"}}],[11,"get_ns","","",5,{"inputs":[{"name":"authority"}],"output":{"name":"option"}}],[11,"lookup","","",5,{"inputs":[{"name":"authority"},{"name":"name"},{"name":"recordtype"},{"name":"dnsclass"}],"output":{"name":"option"}}],[11,"new","","",6,{"inputs":[{"name":"catalog"}],"output":{"name":"self"}}],[11,"upsert","","",6,{"inputs":[{"name":"catalog"},{"name":"name"},{"name":"authority"}],"output":null}],[11,"lookup","","",6,{"inputs":[{"name":"catalog"},{"name":"message"}],"output":{"name":"message"}}],[11,"search","","",6,{"inputs":[{"name":"catalog"},{"name":"query"}],"output":{"name":"option"}}],[0,"op","trust_dns","",null,null],[0,"op_code","trust_dns::op","",null,null],[4,"OpCode","trust_dns::op::op_code","",null,null],[13,"Query","","",7,null],[13,"Status","","",7,null],[13,"Notify","","",7,null],[13,"Update","","",7,null],[11,"clone","","",7,{"inputs":[{"name":"opcode"}],"output":{"name":"opcode"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"opcode"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"opcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",7,{"inputs":[{"name":"opcode"},{"name":"u8"}],"output":{"name":"self"}}],[0,"response_code","trust_dns::op","",null,null],[4,"ResponseCode","trust_dns::op::response_code","",null,null],[13,"NoError","","",8,null],[13,"FormErr","","",8,null],[13,"ServFail","","",8,null],[13,"NXDomain","","",8,null],[13,"NotImp","","",8,null],[13,"Refused","","",8,null],[13,"YXDomain","","",8,null],[13,"YXRRSet","","",8,null],[13,"NXRRSet","","",8,null],[13,"NotAuth","","",8,null],[13,"NotZone","","",8,null],[13,"BADVERS","","",8,null],[13,"BADSIG","","",8,null],[13,"BADKEY","","",8,null],[13,"BADTIME","","",8,null],[13,"BADMODE","","",8,null],[13,"BADNAME","","",8,null],[13,"BADALG","","",8,null],[13,"BADTRUNC","","",8,null],[13,"BADCOOKIE","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"responsecode"}],"output":{"name":"responsecode"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"responsecode"},{"name":"responsecode"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"responsecode"},{"name":"responsecode"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"responsecode"},{"name":"responsecode"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"responsecode"},{"name":"responsecode"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"responsecode"},{"name":"responsecode"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"responsecode"},{"name":"responsecode"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"responsecode"},{"name":"responsecode"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"responsecode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",8,{"inputs":[{"name":"responsecode"},{"name":"u8"}],"output":{"name":"self"}}],[0,"message","trust_dns::op","",null,null],[3,"Message","trust_dns::op::message","",null,null],[11,"eq","","",9,{"inputs":[{"name":"message"},{"name":"message"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"message"},{"name":"message"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"message"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",9,{"inputs":[{"name":"message"}],"output":{"name":"self"}}],[11,"id","","",9,{"inputs":[{"name":"message"},{"name":"u16"}],"output":{"name":"self"}}],[11,"message_type","","",9,{"inputs":[{"name":"message"},{"name":"messagetype"}],"output":{"name":"self"}}],[11,"op_code","","",9,{"inputs":[{"name":"message"},{"name":"opcode"}],"output":{"name":"self"}}],[11,"authoritative","","",9,{"inputs":[{"name":"message"},{"name":"bool"}],"output":{"name":"self"}}],[11,"truncated","","",9,{"inputs":[{"name":"message"},{"name":"bool"}],"output":{"name":"self"}}],[11,"recursion_desired","","",9,{"inputs":[{"name":"message"},{"name":"bool"}],"output":{"name":"self"}}],[11,"recursion_available","","",9,{"inputs":[{"name":"message"},{"name":"bool"}],"output":{"name":"self"}}],[11,"response_code","","",9,{"inputs":[{"name":"message"},{"name":"responsecode"}],"output":{"name":"self"}}],[11,"add_query","","",9,{"inputs":[{"name":"message"},{"name":"query"}],"output":{"name":"self"}}],[11,"add_answer","","",9,{"inputs":[{"name":"message"},{"name":"record"}],"output":{"name":"self"}}],[11,"add_all_answers","","",9,null],[11,"add_name_server","","",9,{"inputs":[{"name":"message"},{"name":"record"}],"output":{"name":"self"}}],[11,"add_all_name_servers","","",9,null],[11,"add_additional","","",9,{"inputs":[{"name":"message"},{"name":"record"}],"output":{"name":"self"}}],[11,"get_id","","",9,{"inputs":[{"name":"message"}],"output":{"name":"u16"}}],[11,"get_message_type","","",9,{"inputs":[{"name":"message"}],"output":{"name":"messagetype"}}],[11,"get_op_code","","",9,{"inputs":[{"name":"message"}],"output":{"name":"opcode"}}],[11,"is_authoritative","","",9,{"inputs":[{"name":"message"}],"output":{"name":"bool"}}],[11,"is_truncated","","",9,{"inputs":[{"name":"message"}],"output":{"name":"bool"}}],[11,"is_recursion_desired","","",9,{"inputs":[{"name":"message"}],"output":{"name":"bool"}}],[11,"is_recursion_available","","",9,{"inputs":[{"name":"message"}],"output":{"name":"bool"}}],[11,"get_response_code","","",9,{"inputs":[{"name":"message"}],"output":{"name":"responsecode"}}],[11,"get_queries","","",9,{"inputs":[{"name":"message"}],"output":{"name":"vec"}}],[11,"get_answers","","",9,{"inputs":[{"name":"message"}],"output":{"name":"vec"}}],[11,"get_name_servers","","",9,{"inputs":[{"name":"message"}],"output":{"name":"vec"}}],[11,"get_additional","","",9,{"inputs":[{"name":"message"}],"output":{"name":"vec"}}],[11,"update_counts","","this is necessary to match the counts in the header from the record sections\nthis happens implicitly on write_to, so no need to call before write_to",9,{"inputs":[{"name":"message"}],"output":{"name":"self"}}],[11,"read","","",9,{"inputs":[{"name":"message"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",9,{"inputs":[{"name":"message"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[0,"header","trust_dns::op","",null,null],[3,"Header","trust_dns::op::header","",null,null],[4,"MessageType","","",null,null],[13,"Query","","",10,null],[13,"Response","","",10,null],[11,"partial_cmp","","",11,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"header"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"messagetype"}],"output":{"name":"messagetype"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"messagetype"},{"name":"messagetype"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"messagetype"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"messagetype"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"messagetype"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"messagetype"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"messagetype"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"messagetype"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"messagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","A default Header, not very useful.",11,{"inputs":[{"name":"header"}],"output":{"name":"self"}}],[11,"id","","",11,{"inputs":[{"name":"header"},{"name":"u16"}],"output":{"name":"self"}}],[11,"message_type","","",11,{"inputs":[{"name":"header"},{"name":"messagetype"}],"output":{"name":"self"}}],[11,"op_code","","",11,{"inputs":[{"name":"header"},{"name":"opcode"}],"output":{"name":"self"}}],[11,"authoritative","","",11,{"inputs":[{"name":"header"},{"name":"bool"}],"output":{"name":"self"}}],[11,"truncated","","",11,{"inputs":[{"name":"header"},{"name":"bool"}],"output":{"name":"self"}}],[11,"recursion_desired","","",11,{"inputs":[{"name":"header"},{"name":"bool"}],"output":{"name":"self"}}],[11,"recursion_available","","",11,{"inputs":[{"name":"header"},{"name":"bool"}],"output":{"name":"self"}}],[11,"response_code","","",11,{"inputs":[{"name":"header"},{"name":"responsecode"}],"output":{"name":"self"}}],[11,"query_count","","",11,{"inputs":[{"name":"header"},{"name":"u16"}],"output":{"name":"self"}}],[11,"answer_count","","",11,{"inputs":[{"name":"header"},{"name":"u16"}],"output":{"name":"self"}}],[11,"name_server_count","","",11,{"inputs":[{"name":"header"},{"name":"u16"}],"output":{"name":"self"}}],[11,"additional_count","","",11,{"inputs":[{"name":"header"},{"name":"u16"}],"output":{"name":"self"}}],[11,"get_id","","",11,{"inputs":[{"name":"header"}],"output":{"name":"u16"}}],[11,"get_message_type","","",11,{"inputs":[{"name":"header"}],"output":{"name":"messagetype"}}],[11,"get_op_code","","",11,{"inputs":[{"name":"header"}],"output":{"name":"opcode"}}],[11,"is_authoritative","","",11,{"inputs":[{"name":"header"}],"output":{"name":"bool"}}],[11,"is_truncated","","",11,{"inputs":[{"name":"header"}],"output":{"name":"bool"}}],[11,"is_recursion_desired","","",11,{"inputs":[{"name":"header"}],"output":{"name":"bool"}}],[11,"is_recursion_available","","",11,{"inputs":[{"name":"header"}],"output":{"name":"bool"}}],[11,"get_response_code","","",11,{"inputs":[{"name":"header"}],"output":{"name":"responsecode"}}],[11,"get_query_count","","",11,{"inputs":[{"name":"header"}],"output":{"name":"u16"}}],[11,"get_answer_count","","",11,{"inputs":[{"name":"header"}],"output":{"name":"u16"}}],[11,"get_name_server_count","","",11,{"inputs":[{"name":"header"}],"output":{"name":"u16"}}],[11,"get_additional_count","","",11,{"inputs":[{"name":"header"}],"output":{"name":"u16"}}],[11,"clone","","This is a specialized clone which clones all the fields but the counts\nhandy for setting the count fields before sending over the wire.",11,{"inputs":[{"name":"header"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"self"}}],[11,"read","","",11,{"inputs":[{"name":"header"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",11,{"inputs":[{"name":"header"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[0,"query","trust_dns::op","",null,null],[3,"Query","trust_dns::op::query","",null,null],[11,"fmt","","",12,{"inputs":[{"name":"query"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"query"},{"name":"query"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"query"},{"name":"query"}],"output":{"name":"bool"}}],[11,"new","","return a default query with an empty name and A, IN for the query_type and query_class",12,{"inputs":[{"name":"query"}],"output":{"name":"self"}}],[11,"name","","replaces name with the new name",12,{"inputs":[{"name":"query"},{"name":"name"}],"output":{"name":"self"}}],[11,"query_type","","",12,{"inputs":[{"name":"query"},{"name":"recordtype"}],"output":{"name":"self"}}],[11,"query_class","","",12,{"inputs":[{"name":"query"},{"name":"dnsclass"}],"output":{"name":"self"}}],[11,"get_name","","",12,{"inputs":[{"name":"query"}],"output":{"name":"name"}}],[11,"get_query_type","","",12,{"inputs":[{"name":"query"}],"output":{"name":"recordtype"}}],[11,"get_query_class","","",12,{"inputs":[{"name":"query"}],"output":{"name":"dnsclass"}}],[11,"read","","",12,{"inputs":[{"name":"query"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"emit","","",12,{"inputs":[{"name":"query"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[0,"udp","trust_dns","",null,null],[0,"client","trust_dns::udp","",null,null],[3,"Client","trust_dns::udp::client","",null,null],[11,"new","","name_server to connect to with default port 53",13,{"inputs":[{"name":"client"},{"name":"ipv4addr"}],"output":{"name":"clientresult"}}],[11,"with_addr","","",13,{"inputs":[{"name":"client"},{"name":"a"}],"output":{"name":"clientresult"}}],[11,"query","","send a DNS query to the name_server specified in Clint.",13,{"inputs":[{"name":"client"},{"name":"name"},{"name":"dnsclass"},{"name":"recordtype"}],"output":{"name":"clientresult"}}],[0,"server","trust_dns::udp","",null,null],[3,"Server","trust_dns::udp::server","",null,null],[11,"with_authorities","","",14,{"inputs":[{"name":"server"},{"name":"catalog"}],"output":{"name":"self"}}],[11,"local_addr","","",14,{"inputs":[{"name":"server"}],"output":{"name":"result"}}],[11,"listen","","",14,{"inputs":[{"name":"server"}],"output":null}],[11,"handle_message","","",14,{"inputs":[{"name":"server"},{"name":"socketaddr"},{"name":"message"}],"output":null}],[11,"error_to","","",14,{"inputs":[{"name":"server"},{"name":"socketaddr"},{"name":"u16"},{"name":"opcode"},{"name":"responsecode"}],"output":null}],[11,"send_to","","",14,{"inputs":[{"name":"server"},{"name":"socketaddr"},{"name":"message"}],"output":null}],[0,"error","trust_dns","",null,null],[4,"DecodeError","trust_dns::error","",null,null],[13,"ParseUtf8Error","","",15,null],[13,"UnknownDnsClassValue","","",15,null],[13,"UnknownDnsClassStr","","",15,null],[13,"UnknownRecordTypeValue","","",15,null],[13,"UnknownRecordTypeStr","","",15,null],[13,"NoRecordDataType","","",15,null],[13,"NoRecordDataLength","","",15,null],[13,"EOF","","",15,null],[4,"EncodeError","","",null,null],[13,"CharacterDataTooLong","","",16,null],[13,"LabelBytesTooLong","","",16,null],[13,"DomainNameTooLong","","",16,null],[4,"ClientError","","",null,null],[13,"DecodeError","","",17,null],[13,"EncodeError","","",17,null],[13,"IoError","","",17,null],[13,"NotAllBytesSent","","",17,null],[12,"sent","trust_dns::error::ClientError","",17,null],[12,"expect","","",17,null],[13,"IncorrectMessageId","trust_dns::error","",17,null],[12,"got","trust_dns::error::ClientError","",17,null],[12,"expect","","",17,null],[4,"LexerError","trust_dns::error","",null,null],[13,"ParseUtf8Error","","",18,null],[13,"EscapedCharOutsideCharData","","",18,null],[13,"IllegalCharacter","","",18,null],[13,"UnrecognizedChar","","",18,null],[13,"BadEscapedData","","",18,null],[13,"UnrecognizedOctet","","",18,null],[13,"ParseIntError","","",18,null],[13,"UnclosedQuotedString","","",18,null],[13,"UnclosedList","","",18,null],[13,"UnrecognizedDollar","","",18,null],[13,"EOF","","",18,null],[13,"IllegalState","","",18,null],[4,"ParseError","","",null,null],[13,"LexerError","","",19,null],[13,"DecodeError","","",19,null],[13,"UnexpectedToken","","",19,null],[13,"OriginIsUndefined","","",19,null],[13,"RecordTypeNotSpecified","","",19,null],[13,"RecordNameNotSpecified","","",19,null],[13,"RecordClassNotSpecified","","",19,null],[13,"RecordTTLNotSpecified","","",19,null],[13,"RecordDataNotSpecified","","",19,null],[13,"SoaAlreadySpecified","","",19,null],[13,"MissingToken","","",19,null],[13,"IoError","","",19,null],[13,"ParseIntError","","",19,null],[13,"AddrParseError","","",19,null],[11,"fmt","","",15,{"inputs":[{"name":"decodeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"decodeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",15,{"inputs":[{"name":"decodeerror"}],"output":{"name":"str"}}],[11,"cause","","",15,{"inputs":[{"name":"decodeerror"}],"output":{"name":"option"}}],[11,"from","","",15,{"inputs":[{"name":"decodeerror"},{"name":"fromutf8error"}],"output":{"name":"decodeerror"}}],[11,"fmt","","",16,{"inputs":[{"name":"encodeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"encodeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",16,{"inputs":[{"name":"encodeerror"}],"output":{"name":"str"}}],[11,"cause","","",16,{"inputs":[{"name":"encodeerror"}],"output":{"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"clienterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"clienterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",17,{"inputs":[{"name":"clienterror"}],"output":{"name":"str"}}],[11,"cause","","",17,{"inputs":[{"name":"clienterror"}],"output":{"name":"option"}}],[11,"from","","",17,{"inputs":[{"name":"clienterror"},{"name":"decodeerror"}],"output":{"name":"self"}}],[11,"from","","",17,{"inputs":[{"name":"clienterror"},{"name":"encodeerror"}],"output":{"name":"self"}}],[11,"from","","",17,{"inputs":[{"name":"clienterror"},{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","","",18,{"inputs":[{"name":"lexererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"lexererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",18,{"inputs":[{"name":"lexererror"}],"output":{"name":"str"}}],[11,"cause","","",18,{"inputs":[{"name":"lexererror"}],"output":{"name":"option"}}],[11,"from","","",18,{"inputs":[{"name":"lexererror"},{"name":"fromutf8error"}],"output":{"name":"lexererror"}}],[11,"from","","",18,{"inputs":[{"name":"lexererror"},{"name":"parseinterror"}],"output":{"name":"lexererror"}}],[11,"fmt","","",19,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",19,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"cause","","",19,{"inputs":[{"name":"parseerror"}],"output":{"name":"option"}}],[11,"from","","",19,{"inputs":[{"name":"parseerror"},{"name":"lexererror"}],"output":{"name":"parseerror"}}],[11,"from","","",19,{"inputs":[{"name":"parseerror"},{"name":"decodeerror"}],"output":{"name":"parseerror"}}],[11,"from","","",19,{"inputs":[{"name":"parseerror"},{"name":"error"}],"output":{"name":"parseerror"}}],[11,"from","","",19,{"inputs":[{"name":"parseerror"},{"name":"parseinterror"}],"output":{"name":"parseerror"}}],[11,"from","","",19,{"inputs":[{"name":"parseerror"},{"name":"addrparseerror"}],"output":{"name":"parseerror"}}],[6,"DecodeResult","","",null,null],[6,"EncodeResult","","",null,null],[6,"ClientResult","","",null,null],[6,"LexerResult","","",null,null],[6,"ParseResult","","",null,null],[0,"serialize","trust_dns","",null,null],[0,"binary","trust_dns::serialize","",null,null],[3,"BinDecoder","trust_dns::serialize::binary","This is non-destructive to the inner buffer, b/c for pointer types we need to perform a reverse\n seek to lookup names",null,null],[3,"BinEncoder","","Encode DNS messages and resource record types.",null,null],[11,"new","","",20,{"inputs":[{"name":"bindecoder"},{"name":"vec"}],"output":{"name":"self"}}],[11,"set_record_type","","",20,{"inputs":[{"name":"bindecoder"},{"name":"recordtype"}],"output":null}],[11,"set_rdata_length","","",20,{"inputs":[{"name":"bindecoder"},{"name":"u16"}],"output":null}],[11,"record_type","","",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"option"}}],[11,"rdata_length","","",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"option"}}],[11,"pop","","",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"len","","",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"usize"}}],[11,"peek","","",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"option"}}],[11,"clone","","this makes a new copy of the underlying segment of the array, need a better way...\nTODO: change this to a internal reference to make this faster and use less memory",20,{"inputs":[{"name":"bindecoder"},{"name":"u16"}],"output":{"name":"bindecoder"}}],[11,"read_character_data","","<character-string> is a single\nlength octet followed by that number of characters.  <character-string>\nis treated as binary information, and can be up to 256 characters in\nlength (including the length octet).",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","parses the next 2 bytes into u16. This performs a byte-by-byte manipulation, there\n which means endianness is implicitly handled (i.e. no network to little endian (intel), issues)",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","parses the next four bytes into i32. This performs a byte-by-byte manipulation, there\n which means endianness is implicitly handled (i.e. no network to little endian (intel), issues)",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","parses the next four bytes into u32. This performs a byte-by-byte manipulation, there\n which means endianness is implicitly handled (i.e. no network to little endian (intel), issues)",20,{"inputs":[{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[11,"new","","",21,{"inputs":[{"name":"binencoder"}],"output":{"name":"self"}}],[11,"as_bytes","","",21,{"inputs":[{"name":"binencoder"}],"output":{"name":"vec"}}],[11,"len","","",21,{"inputs":[{"name":"binencoder"}],"output":{"name":"usize"}}],[11,"reserve","","",21,{"inputs":[{"name":"binencoder"},{"name":"usize"}],"output":null}],[11,"emit","","",21,{"inputs":[{"name":"binencoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_character_data","","matches description from above.",21,{"inputs":[{"name":"binencoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",21,{"inputs":[{"name":"binencoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",21,{"inputs":[{"name":"binencoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",21,{"inputs":[{"name":"binencoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[8,"BinSerializable","","",null,null],[10,"read","","",22,{"inputs":[{"name":"binserializable"},{"name":"bindecoder"}],"output":{"name":"decoderesult"}}],[10,"emit","","",22,{"inputs":[{"name":"binserializable"},{"name":"binencoder"}],"output":{"name":"encoderesult"}}],[0,"txt","trust_dns::serialize","",null,null],[3,"Parser","trust_dns::serialize::txt","",null,null],[3,"Lexer","","",null,null],[4,"Token","","",null,null],[13,"Blank","","",23,null],[13,"List","","",23,null],[13,"CharData","","",23,null],[13,"At","","",23,null],[13,"Include","","",23,null],[13,"Origin","","",23,null],[13,"EOL","","",23,null],[11,"new","","",24,{"inputs":[{"name":"lexer"},{"name":"str"}],"output":{"name":"lexer"}}],[11,"next_token","","",24,{"inputs":[{"name":"lexer"}],"output":{"name":"lexerresult"}}],[11,"clone","","",23,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"fmt","","",23,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"new","","",25,{"inputs":[{"name":"parser"}],"output":{"name":"self"}}],[11,"parse_from","","",25,{"inputs":[{"name":"parser"},{"name":"file"},{"name":"option"}],"output":{"name":"parseresult"}}],[11,"parse","","",25,{"inputs":[{"name":"parser"},{"name":"lexer"},{"name":"option"}],"output":{"name":"parseresult"}}],[8,"TxtSerializable","","",null,null],[10,"parse","","",26,{"inputs":[{"name":"txtserializable"},{"name":"lexer"}],"output":{"name":"parseresult"}}]],"paths":[[4,"RecordType"],[4,"DNSClass"],[3,"Record"],[4,"RData"],[3,"Name"],[3,"Authority"],[3,"Catalog"],[4,"OpCode"],[4,"ResponseCode"],[3,"Message"],[4,"MessageType"],[3,"Header"],[3,"Query"],[3,"Client"],[3,"Server"],[4,"DecodeError"],[4,"EncodeError"],[4,"ClientError"],[4,"LexerError"],[4,"ParseError"],[3,"BinDecoder"],[3,"BinEncoder"],[8,"BinSerializable"],[4,"Token"],[3,"Lexer"],[3,"Parser"],[8,"TxtSerializable"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade.",null,null],[3,"LogRecord","","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Trace` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",8,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",8,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",8,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",8,null],[11,"eq","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"fmt","alloc::arc","",9,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Arc<T>`.",10,{"inputs":[{"name":"arc"},{"name":"t"}],"output":{"name":"arc"}}],[11,"downgrade","","Downgrades the `Arc<T>` to a `Weak<T>` reference.",10,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"usize"}}],[11,"clone","","Makes a clone of the `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"deref","","",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"make_unique","","Make a mutable reference from the given `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Arc<T>`.",10,null],[11,"upgrade","","Upgrades a weak reference to a strong reference.",9,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"clone","","Makes a clone of the `Weak<T>`.",9,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak<T>`.",9,null],[11,"eq","","Equality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ordering"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"hash","","",10,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",11,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` is unique.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",11,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` is\nunique.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",11,null],[11,"clone","","Makes a clone of the `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",12,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",12,null],[11,"clone","","Makes a clone of the `Weak<T>`.",12,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",12,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"log!","log","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"Box"],[3,"Weak"],[3,"Arc"],[3,"Rc"],[3,"Weak"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"__unused1","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused2","","",1,null],[12,"gl_pathv","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[12,"__unused6","","",1,null],[12,"__unused7","","",1,null],[12,"__unused8","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_len","","",6,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",7,null],[12,"ss_family","","",7,null],[12,"__ss_pad1","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",8,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",10,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",15,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_dstaddr","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_mode","","",17,null],[12,"st_nlink","","",17,null],[12,"st_ino","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"st_rdev","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"st_birthtime","","",17,null],[12,"st_birthtime_nsec","","",17,null],[12,"st_size","","",17,null],[12,"st_blocks","","",17,null],[12,"st_blksize","","",17,null],[12,"st_flags","","",17,null],[12,"st_gen","","",17,null],[12,"st_lspare","","",17,null],[12,"st_qspare","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__sig","","",19,null],[12,"__opaque","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"mach_timebase_info","libc::types::os::arch::extra","",null,null],[12,"numer","","",20,null],[12,"denom","","",20,null],[6,"mach_timebase_info_data_t","","",null,null],[11,"clone","","",20,{"inputs":[{"name":"mach_timebase_info"}],"output":{"name":"mach_timebase_info"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"O_DSYNC","libc::consts::os::extra","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"MAP_STACK","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"PATH_MAX","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"ioctl","libc::funcs::bsd44","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"getdtablesize","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[0,"extra","libc::funcs","",null,null],[5,"_NSGetExecutablePath","libc::funcs::extra","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"mach_timebase_info"]]};
initSearch(searchIndex);
